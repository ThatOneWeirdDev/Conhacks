exec(''.join([chr(ord(c) - 1) for c in "ZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bSBpbXBvcnQgd2ViZHJpdmVyCmltcG9ydCB0aW1lCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwCmltcG9ydCBqc29uCmltcG9ydCByZQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwppbXBvcnQgcmFuZG9tCgojIEZ1bmN0aW9uIHRvIHNlbGVjdCBicm93c2VyIGRyaXZlcgpkZWYgc2VsZWN0X2Jyb3dzZXIoYnJvd3Nlcl90eXBlKToKICAgIGlmIGJyb3dzZXJfdHlwZSA9PSAxOgogICAgICAgIHJldHVybiB3ZWJkcml2ZXIuQ2hyb21lKCkKICAgIGVsaWYgYnJvd3Nlcl90eXBlID09IDI6CiAgICAgICAgcmV0dXJuIHdlYmRyaXZlci5FZGdlKCkKICAgIGVsaWYgYnJvd3Nlcl90eXBlID09IDM6CiAgICAgICAgcmV0dXJuIHdlYmRyaXZlci5GaXJlZm94KCkKICAgIGVsaWYgYnJvd3Nlcl90eXBlID09IDQ6CiAgICAgICAgcmV0dXJuIHdlYmRyaXZlci5JZSgpCiAgICBlbGlmIGJyb3dzZXJfdHlwZSA9PSA1OgogICAgICAgIHJldHVybiB3ZWJkcml2ZXIuU2FmYXJpKCkKICAgIGVsc2U6CiAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigiSW52YWxpZCBicm93c2VyIHR5cGUuIFBsZWFzZSBlbnRlciBhIG51bWJlciBiZXR3ZWVuIDEgYW5kIDUuIikKCiMgR2V0IHVzZXIgaW5wdXRzCmJyb3dzZXJfdHlwZSA9IGludChpbnB1dCgiUGxlYXNlIGVudGVyIGFuIGludGVnZXIgMS01IGZvciB3aGljaCBicm93c2VyIHlvdSdkIGxpa2UgdG8gdXNlXG4oeW91IG5lZWQgdG8gZG93bmxvYWQgdGhlIGNvcnJlc3BvbmRpbmcgd2ViZHJpdmVyKTpcbjE6IENocm9tZVxuMjogRWRnZVxuMzogRmlyZUZveFxuNDogSW50ZXJuZXQgRXhwbG9yZXJcbjU6IFNhZmFyaVxuIikpCnByaW50KCJQbGVhc2UgZW50ZXIgQ29uanVndWVtb3MgbG9naW4iKQp1c2VybmFtZSA9IGlucHV0KCJVc2VybmFtZTogIikKcGFzc3dvcmQgPSBpbnB1dCgiUGFzc3dvcmQ6ICIpCnZvY2FiX2lkID0gaW5wdXQoIldoYXQgaXMgdGhlIElEIG9mIHRoZSBsZXNzb24/XG4iKQp3YWl0X3RpbWUgPSBpbnB1dCgiSG93IG11Y2ggdGltZSBkbyB5b3Ugd2FudCB0aGUgYm90IHRvIHdhaXQgaW4gYmV0d2VlbiBxdWVzdGlvbnM/XG4iKQpwZXJjZW50X2NvcnJlY3QgPSBpbnQoaW5wdXQoIldoYXQgcGVyY2VudCBkbyB5b3Ugd2FudCBvdXQgb2YgMTAwP1xuIikpCgp0cnk6CiAgICBkcml2ZXIgPSBzZWxlY3RfYnJvd3Nlcihicm93c2VyX3R5cGUpCgogICAgIyBOYXZpZ2F0ZSB0byB0aGUgbG9naW4gcGFnZQogICAgZHJpdmVyLmdldCgiaHR0cHM6Ly9jb25qdWd1ZW1vcy5jb20vYXV0aC9sb2dpbiIpCiAgICBkcml2ZXIubWF4aW1pemVfd2luZG93KCkKCiAgICAjIFdhaXQgZm9yIHRoZSBjb29raWUgYWNjZXB0YW5jZSBidXR0b24gdG8gYmUgcHJlc2VudCBhbmQgdGhlbiBjbGljayBpdAogICAgY29va2llX2J1dHRvbiA9IFdlYkRyaXZlcldhaXQoZHJpdmVyLCAxMCkudW50aWwoCiAgICAgICAgRUMucHJlc2VuY2Vfb2ZfZWxlbWVudF9sb2NhdGVkKChCeS5DTEFTU19OQU1FLCAianMtY29va2llLWNvbmZpcm0tY2xvc2UiKSkKICAgICkKICAgIGNvb2tpZV9idXR0b24uY2xpY2soKQogICAgcHJpbnQoIkZvdW5kIGFuZCBjbGlja2VkIGNvb2tpZSBhY2NlcHQgYnV0dG9uIGVsZW1lbnQiKQoKICAgICMgV2FpdCBmb3IgdGhlIHVzZXJuYW1lIGZpZWxkIHRvIGJlIHByZXNlbnQgYW5kIHRoZW4gc2VuZCBrZXlzIHRvIGl0CiAgICB1c2VybmFtZV9maWVsZCA9IFdlYkRyaXZlcldhaXQoZHJpdmVyLCAxMCkudW50aWwoCiAgICAgICAgRUMucHJlc2VuY2Vfb2ZfZWxlbWVudF9sb2NhdGVkKChCeS5JRCwgImlkZW50aXR5IikpCiAgICApCiAgICB1c2VybmFtZV9maWVsZC5jbGljaygpCiAgICB1c2VybmFtZV9maWVsZC5zZW5kX2tleXModXNlcm5hbWUpCiAgICBwcmludCgiRm91bmQgdXNlcm5hbWUgZmllbGQgYW5kIGVudGVyZWQgdGV4dCIpCgogICAgIyBXYWl0IGZvciB0aGUgcGFzc3dvcmQgZmllbGQgdG8gYmUgcHJlc2VudCBhbmQgdGhlbiBzZW5kIGtleXMgdG8gaXQKICAgIHBhc3N3b3JkX2ZpZWxkID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDEwKS51bnRpbCgKICAgICAgICBFQy5wcmVzZW5jZV9vZl9lbGVtZW50X2xvY2F0ZWQoKEJ5LklELCAicGFzc3dvcmQiKSkKICAgICkKICAgIHBhc3N3b3JkX2ZpZWxkLmNsaWNrKCkKICAgIHBhc3N3b3JkX2ZpZWxkLnNlbmRfa2V5cyhwYXNzd29yZCkKICAgIHByaW50KCJGb3VuZCBwYXNzd29yZCBmaWVsZCBhbmQgZW50ZXJlZCB0ZXh0IikKCiAgICAjIFdhaXQgZm9yIHRoZSBsb2dpbiBidXR0b24gdG8gYmUgcHJlc2VudCBhbmQgdGhlbiBjbGljayBpdAogICAgbG9naW5fYnV0dG9uID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDEwKS51bnRpbCgKICAgICAgICBFQy5wcmVzZW5jZV9vZl9lbGVtZW50X2xvY2F0ZWQoKEJ5LklELCAibG9naW5fYnRuIikpCiAgICApCiAgICBsb2dpbl9idXR0b24uY2xpY2soKQoKICAgICMgV2FpdCBmb3IgdGhlIGxvZ2luIHRvIGNvbXBsZXRlCiAgICBXZWJEcml2ZXJXYWl0KGRyaXZlciwgMTApLnVudGlsKAogICAgICAgIEVDLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgoQnkuQ0xBU1NfTkFNRSwgImFjdGl2ZSIpKQogICAgKQoKICAgICMgTmF2aWdhdGUgdG8gdGhlIHZvY2FidWxhcnkgbGlzdCBwYWdlCiAgICBkcml2ZXIuZ2V0KGYnaHR0cHM6Ly9jb25qdWd1ZW1vcy5jb20vdm9jYWJ1bGFyeS92b2NhYl9jaGFydC97dm9jYWJfaWR9JykKICAgIHRpbWUuc2xlZXAoMC41KQogICAgCiAgICAjIEdldCB0aGUgcGFnZSBzb3VyY2UgKEhUTUwpCiAgICBwYWdlX3NvdXJjZSA9IGRyaXZlci5wYWdlX3NvdXJjZQoKICAgICMgUGFyc2UgdGhlIEhUTUwgd2l0aCBCZWF1dGlmdWxTb3VwCiAgICBzb3VwID0gQmVhdXRpZnVsU291cChwYWdlX3NvdXJjZSwgJ2h0bWwucGFyc2VyJykKCiAgICAjIEZpbmQgdGhlIHZvY2FidWxhcnkgbGlzdCB0YWJsZQogICAgdGFibGUgPSBzb3VwLmZpbmQoJ3RhYmxlJywgY2xhc3NfPSd0YWJsZSB0YWJsZS0tZmF0JykKCiAgICAjIEV4dHJhY3QgdGhlIHZvY2FidWxhcnkgbGlzdAogICAgdm9jYWJfbGlzdCA9IFtdCiAgICBmb3Igcm93IGluIHRhYmxlLmZpbmRfYWxsKCd0cicpWzE6XTogICMgU2tpcCB0aGUgaGVhZGVyIHJvdwogICAgICAgIGNvbHVtbnMgPSByb3cuZmluZF9hbGwoJ3RkJykKICAgICAgICBpZiBsZW4oY29sdW1ucykgPT0gMjoKICAgICAgICAgICAgcHJvbXB0ID0gY29sdW1uc1swXS50ZXh0LnN0cmlwKCkKICAgICAgICAgICAgIyBSZW1vdmUgbnVtYmVycyBmcm9tIHRoZSBwcm9tcHQKICAgICAgICAgICAgcHJvbXB0ID0gcmUuc3ViKHInXlxkK1wuXHMqJywgJycsIHByb21wdCkKICAgICAgICAgICAgYW5zd2VyID0gY29sdW1uc1sxXS50ZXh0LnN0cmlwKCkKICAgICAgICAgICAgIyBSZW1vdmUgbnVtYmVycyBmcm9tIHRoZSBhbnN3ZXIKICAgICAgICAgICAgYW5zd2VyID0gcmUuc3ViKHInXlxkK1wuXHMqJywgJycsIGFuc3dlcikKICAgICAgICAgICAgaWYgIi8iIGluIGFuc3dlcjoKICAgICAgICAgICAgICAgIGFuc3dlciA9IGFuc3dlci5zcGxpdCgiLyIpWzBdCiAgICAgICAgICAgIHZvY2FiX2xpc3QuYXBwZW5kKHsiUHJvbXB0IjogcHJvbXB0LCAiQW5zd2VyIjogYW5zd2VyfSkKCiAgICAjIENvbnZlcnQgdGhlIHZvY2FidWxhcnkgbGlzdCB0byBKU09OCiAgICB2b2NhYl9qc29uID0ganNvbi5kdW1wcyh2b2NhYl9saXN0LCBlbnN1cmVfYXNjaWk9RmFsc2UsIGluZGVudD0yKQoKICAgICMgTmF2aWdhdGUgdG8gdGhlIGhvbWV3b3JrIHBhZ2UKICAgIGRyaXZlci5nZXQoZidodHRwczovL2Nvbmp1Z3VlbW9zLmNvbS92b2NhYnVsYXJ5L2hvbWV3b3JrL3t2b2NhYl9pZH0nKQoKICAgICMgV2FpdCBmb3IgdGhlIHN0YXJ0IGJ1dHRvbiB0byBiZSBjbGlja2FibGUgYW5kIHRoZW4gY2xpY2sgaXQKICAgIHN0YXJ0X2J1dHRvbiA9IFdlYkRyaXZlcldhaXQoZHJpdmVyLCAyMCkudW50aWwoCiAgICAgICAgRUMuZWxlbWVudF90b19iZV9jbGlja2FibGUoKEJ5LkNMQVNTX05BTUUsICJidG4tLXN0YXJ0LWdwIikpCiAgICApCiAgICBzdGFydF9idXR0b24uY2xpY2soKQogICAgdGltZS5zbGVlcCgxKQoKICAgIHdoaWxlIFRydWU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIFdhaXQgZm9yIHRoZSBxdWVzdGlvbiBpbnB1dCBmaWVsZCB0byBiZSBwcmVzZW50CiAgICAgICAgICAgIHF1ZXN0aW9uX2lucHV0ID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDEwKS51bnRpbCgKICAgICAgICAgICAgICAgIEVDLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgoQnkuSUQsICJxdWVzdGlvbi1pbnB1dCIpKQogICAgICAgICAgICApCiAgICAgICAgICAgIAogICAgICAgICAgICAjIEdldCB0aGUgdGV4dCBvZiB0aGUgcXVlc3Rpb24KICAgICAgICAgICAgcXVlc3Rpb25fdGV4dCA9IHF1ZXN0aW9uX2lucHV0LnRleHQuc3RyaXAoKQoKICAgICAgICAgICAgcHJpbnQoZidRdWVzdGlvbiB0ZXh0OiB7cXVlc3Rpb25fdGV4dH0nKQoKICAgICAgICAgICAgIyBGaW5kIHRoZSBjb3JyZXNwb25kaW5nIGFuc3dlciBmcm9tIHZvY2FiX2xpc3QKICAgICAgICAgICAgYW5zd2VyID0gTm9uZQogICAgICAgICAgICBmb3IgaXRlbSBpbiB2b2NhYl9saXN0OgogICAgICAgICAgICAgICAgaWYgaXRlbVsiUHJvbXB0Il0gPT0gcXVlc3Rpb25fdGV4dDoKICAgICAgICAgICAgICAgICAgICBhbnN3ZXIgPSBpdGVtWyJBbnN3ZXIiXQogICAgICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICBpZiBhbnN3ZXI6CiAgICAgICAgICAgICAgICBwcmludChmIlF1ZXN0aW9uOiB7cXVlc3Rpb25fdGV4dH0iKQogICAgICAgICAgICAgICAgcHJpbnQoZiJBbnN3ZXI6IHthbnN3ZXJ9IikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHByaW50KGYiTm8gYW5zd2VyIGZvdW5kIGZvciBxdWVzdGlvbjoge3F1ZXN0aW9uX3RleHR9IikKICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICAjIFdhaXQgZm9yIHRoZSBhbnN3ZXIgZmllbGQgdG8gYmUgcHJlc2VudCBhbmQgdGhlbiBzZW5kIGtleXMgdG8gaXQKICAgICAgICAgICAgYW5zd2VyX2ZpZWxkID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDEwKS51bnRpbCgKICAgICAgICAgICAgICAgIEVDLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgoQnkuSUQsICJhbnN3ZXItaW5wdXQiKSkKICAgICAgICAgICAgKQogICAgICAgICAgICBhbnN3ZXJfZmllbGQuY2xpY2soKQoKICAgICAgICAgICAgaWYgcmFuZG9tLnJhbmRyYW5nZSgwLCAxMDApID4gcGVyY2VudF9jb3JyZWN0OgogICAgICAgICAgICAgICAgYW5zd2VyX2ZpZWxkLnNlbmRfa2V5cygiaWRrIikKICAgICAgICAgICAgICAgIGFuc3dlcl9maWVsZC5zZW5kX2tleXMoS2V5cy5SRVRVUk4pCiAgICAgICAgICAgICAgICBhbnN3ZXJfZmllbGQuc2VuZF9rZXlzKEtleXMuQ09NTUFORCArICJhIikKICAgICAgICAgICAgICAgIGFuc3dlcl9maWVsZC5zZW5kX2tleXMoS2V5cy5CQUNLX1NQQUNFKQogICAgICAgICAgICBhbnN3ZXJfZmllbGQuc2VuZF9rZXlzKGFuc3dlcikKICAgICAgICAgICAgYW5zd2VyX2ZpZWxkLnNlbmRfa2V5cyhLZXlzLlJFVFVSTikKCiAgICAgICAgICAgIHRpbWUuc2xlZXAoZmxvYXQod2FpdF90aW1lKSkgICMgQWRqdXN0IHNsZWVwIHRpbWUgYXMgbmVjZXNzYXJ5CgogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcHJpbnQoZiJFcnJvcjoge2V9IikKICAgICAgICAgICAgYnJlYWsKCmZpbmFsbHk6CiAgICB3aGlsZSBUcnVlOgogICAgICAgIGNvbnRpbnVl"]))
